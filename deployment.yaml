apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: python
  name: postgres-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          envFrom:
            - secretRef:
                name: postgres-secret
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc-python

---
apiVersion: v1
kind: Service
metadata:
  namespace: python
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: python
  name: django-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
        - name: django
          image: mamicheck/backend:{{IMAGE_TAG}}
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: pydream-secret
          volumeMounts:
            - name: django-storage
              mountPath: /app/static
      volumes:
        - name: django-storage
          persistentVolumeClaim:
            claimName: django-pvc-python

---
apiVersion: v1
kind: Service
metadata:
  namespace: python
  name: django-service
spec:
  selector:
    app: django
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 31080 # port-range: 30000-32767
  type: NodePort
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: python
  name: django-migrate-job
spec:
  ttlSecondsAfterFinished: 3600 # Job will be deleted 1 hour after it finishes
  template:
    spec:
      containers:
        - name: migrate
          image: mamicheck/backend:{{IMAGE_TAG}}
          command: ["python", "manage.py", "migrate"]
          envFrom:
            - secretRef:
                name: pydream-secret
          volumeMounts:
            - name: django-storage
              mountPath: /app/static
      volumes:
        - name: django-storage
          persistentVolumeClaim:
            claimName: django-pvc-python
      restartPolicy: Never
  backoffLimit: 4

---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: python
  name: postgres-pv-python
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /data/postgres-pv

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: python
  name: postgres-pvc-python
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: manual

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: python
  name: django-pvc-python
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: manual

---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: python
  name: django-pv-python
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /data/django-pv